<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>wordpress on Keep calm and write something</title>
    <link>https://cychong47.github.io/tags/wordpress/</link>
    <description>Recent content in wordpress on Keep calm and write something</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 31 May 2020 14:56:52 +0900</lastBuildDate>
    
	<atom:link href="https://cychong47.github.io/tags/wordpress/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Migrate wordpress to hugo</title>
      <link>https://cychong47.github.io/post/2020/hugo-seutp-with-git/</link>
      <pubDate>Sun, 31 May 2020 14:56:52 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2020/hugo-seutp-with-git/</guid>
      <description>Wordpress 에서 hugo로 이사한 후 첫번째 시도. Hugo theme은 harbor를 사용하고, site 호스팅 방법은 nginx docker를 사용. (이상하게 nginx를 helm으로 띄우는 게 간단하지 않네)
Clone repogistry for raw blog data cychong15:migration_to_hugo cychong$ git clone https://github.com/cychong47/sosa0sa.git Cloning into &#39;sosa0sa&#39;... warning: You appear to have cloned an empty repository. Setup hugo inside of the git repository cychong15:migration_to_hugo cychong$ hugo new site sosa0sa Error: /Users/cychong/workspace/migration_to_hugo/sosa0sa already exists and is not empty. See --force. cychong15:migration_to_hugo cychong$ hugo new site sosa0sa --force Congratulations!</description>
    </item>
    
    <item>
      <title>WordPress 로그인 불가 문제 해결</title>
      <link>https://cychong47.github.io/post/2020/recover-broken-users-table/</link>
      <pubDate>Fri, 08 May 2020 23:36:45 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2020/recover-broken-users-table/</guid>
      <description>말썽쟁이(?) wordpress 블로그가 또 문제를 일으켰다.
이번에도 로그인이 안되는 현상인데 지난 번과는 다른 에러 메시지가 나온다. 즉 지난 번 해결책은 소용이 없을 거라는 불길한 예감이.
로그인 계정 자체가 없다는 이 어이없는 상황.
그래서 지난 번에 유용하게 사용했던 phpmyadmin을 이용해서 DB 정보를 확인해봤다. (다행히 MySql, wordpress 와 함께 실행시켜놓은 phpmyadmin container가 동작하고 있어서 지난 번과 같이 8181 포트로 접속하면 된단. 다만 로그인 암호를 기억하지 못하고 있는 나 대신 Safari가 기억하고 있어서 그냥 접속했다는)</description>
    </item>
    
    <item>
      <title>Use jetpack for wordpress 5.0</title>
      <link>https://cychong47.github.io/post/2018/use-jetpack-for-wordpress-5-0/</link>
      <pubDate>Mon, 10 Dec 2018 15:04:29 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2018/use-jetpack-for-wordpress-5-0/</guid>
      <description>Wordpress 5.0부터 기본 editor가 ghost와 같이 block editor 로 변경됨. Markdown을 사용하려면 이전과 동일하게 Jetpack을 사용해야 하는데 docker에서 wordpress를 돌리고 있는 내 경우 ftp를 통한 plugin 설치가 안되다는&amp;hellip;
직접 설치는 안되므로 해결 방안은 Jetpack을 따로 받아 설치한 후 docker volume으로 jetpack 디렉토리를 plugins 디렉토리 밑에 마운트 시키는 방법.
이번 기회에 최신 버전을 받는 방법을 포함해서 정리 해 보자.
Jetpack의 최신 버전 확인 방법 https://wordpress.org/plugins/jetpack/ 을 방문하면 오른쪽 plugin 정보란에서 다음과 같이 최신 버전 정보를 확인할 수 있다.</description>
    </item>
    
    <item>
      <title>Recover WordPress container</title>
      <link>https://cychong47.github.io/post/2020/recovery-failed-wordpress-container/</link>
      <pubDate>Wed, 05 Sep 2018 14:10:39 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2020/recovery-failed-wordpress-container/</guid>
      <description>One day The Wordpress container does not work at all. docker ps로 확인하면 1분 주기로 restart를 반복하고 있다. 경험상 이건 wordpress 앱이 초기화 과정에서 문제가 있는 거라는 걸로 짐작된다. 로그를 확인해 보니 아래와 같은 에러만 출력.
뭐가 문제일까 멀쩡히 잘 돌던 녀석들인데.
mini2:html cychong$ docker logs -f f12c3b3a57ef ... Warning: mysqli::__construct(): Unexpected server respose while doing caching_sha2 auth: 109 in Standard input code on line 22 MySQL Connection Error: (2006) MySQL server has gone away Warning: mysqli::__construct(): MySQL server has gone away in Standard input code on line 22 Warning: mysqli::__construct(): (HY000/2006): MySQL server has gone away in Standard input code on line 22 Warning: mysqli::__construct(): Unexpected server respose while doing caching_sha2 auth: 109 in Standard input code on line 22 Warning: mysqli::__construct(): MySQL server has gone away in Standard input code on line 22 Warning: mysqli::__construct(): (HY000/2006): MySQL server has gone away in Standard input code on line 22 MySQL Connection Error: (2006) MySQL server has gone away Warning: mysqli::__construct(): Unexpected server respose while doing caching_sha2 auth: 109 in Standard input code on line 22 MySQL Connection Error: (2006) MySQL server has gone away Warning: mysqli::__construct(): MySQL server has gone away in Standard input code on line 22 Warning: mysqli::__construct(): (HY000/2006): MySQL server has gone away in Standard input code on line 22 Let’s debug  하지만 뭔가 달라진 게 있으니 갑자기 문제가 발생했겠지.</description>
    </item>
    
    <item>
      <title>Update ansible-playbook for wordpress</title>
      <link>https://cychong47.github.io/post/2018/update-ansible-playbook-for-wordpress/</link>
      <pubDate>Thu, 14 Jun 2018 15:13:52 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2018/update-ansible-playbook-for-wordpress/</guid>
      <description>이상하게 wordpress 버전이 올라가면 docker용 wordpress 버전도 함께 올라갈 텐데 아무리 최신 docker image를 받아 container를 만들어도 wordpress admin 계정에 들어가면 wordpress를 업데이트 해야 한다고 한다. docket store(http://store.docker.com)에 가면 분명히 wordpress 최신 버전으로 패키징되어 있는 데&amp;hellip;
혹시나 하고 ansible-playbook을 보니 /var/www/html에 마운트되는 위치에 이전 버전의 wordpress 파일들이 존재하고 있었다.
 volumes: - &amp;quot;/Users/cychong/Documents/wordpress/html:/var/www/html&amp;quot; - &amp;quot;/Users/cychong/Documents/wordpress/uploads:/var/www/html/wp-content/uploads&amp;quot; - &amp;quot;/Users/cychong/Documents/wordpress/conf/php_uploads.ini:/usr/local/etc/php/conf.d/uploads.ini&amp;quot; 바로 첫번째 줄이 문제를 유발하고 있는 곳&amp;hellip; 내가 왜 굳이 저렇게 했을까 생각해 보니 저 디렉토리에 바로 wp-content가 있고, 그 아래 themes와 plugins가 있다.</description>
    </item>
    
    <item>
      <title>wordpress admin 계정 복구</title>
      <link>https://cychong47.github.io/post/2018/wordpress-admin-login-fail/</link>
      <pubDate>Thu, 14 Jun 2018 14:21:13 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2018/wordpress-admin-login-fail/</guid>
      <description>문제 블로그 보는 거 자체는 문제가 없는데 admin 계정으로 로그인 시도하면 반복해서 로그인 페이지로 redirect됨
http://sosa0sa.com/wp-login.php?redirect_to=http://sosa0sa.com/wp-admin/&amp;amp;reauth=1 구글링을 하니 대부분 쿠키를 초기화하고, theme, plugin등을 초기화하라는 의견이 대부분. 모두 따라해 봤으니 제대로 동작하지 않는다&amp;hellip; -_-;;;
마지막으로 wp_usermeta table에서 session_token 값을 초기화하라는 말이 있어 이것도 해 보기로. phpmyadmin을 설치해서 table의 값을 변경하라고 해서 phpmyadmin을 역시 docker로 설치해 보기로
https://wordpress.org/support/topic/possible-fix-for-sudden-redirect-loop-at-wp-login-with-reauth1/
Phpmyadmin docker 설치 Wordpress ansible-playbook 에 다음과 같이 추가
links를 통해 mysql container와 연결하고 PMA_HOST를 해당 mysql container의 name으로 지정하는 것이 중요한 내용임.</description>
    </item>
    
    <item>
      <title>Install Wordpress with docker</title>
      <link>https://cychong47.github.io/post/2017/install-wordpress-with-docker/</link>
      <pubDate>Tue, 19 Dec 2017 22:20:06 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/install-wordpress-with-docker/</guid>
      <description>Summary docker run --restart=always -e MYSQL_ROOT_PASSWORD=aqwe123 -e MYSQL_USER=wpuser -e MYSQL_PASSWORD=wpuser@ -e MYSQL_DATABASE=wordpress_db -v /Users/cychong/Dropbox/Apps/wordpress/database:/var/lib/mysql --name mysql -d mysql docker run --restart=always -e WORDPRESS_DB_USER=wpuser -e WORDPRESS_DB_PASSWORD=wpuser@ -e WORDPRESS_DB_NAME=wordpress_db -p 80:80 -v /Users/cychong/Documents/wordpress/html:/var/www/html -v /Users/cychong/Documents/wordpress/uploads:/var/www/html/wp-content/uploads -v /Users/cychong/Documents/wordpress/conf/php_uploads.ini:/usr/local/etc/php/conf.d/uploads.ini --link mysql:mysql --name wpcontainer -d wordpress If required, import database to mysql (Once wordpress data is imported into mysql, upgrading mysql does not requires re-import ingof wordpress data)
mysql install container cychong:~ cychong$ docker run --restart=always -e MYSQL_ROOT_PASSWORD=aqwe123 -e MYSQL_USER=wpuser -e MYSQL_PASSWORD=wpuser@ -e MYSQL_DATABASE=wordpress_db -v /Users/cychong/Dropbox/Apps/wordpress/database:/var/lib/mysql --name mysql -d mysql Unable to find image &#39;mysql:latest&#39; locally latest: Pulling from library/mysql aa18ad1a0d33: Pull complete a5745c3b8bcc: Pull complete 76375fcd129c: Pull complete 4f72cfb004cf: Pull complete 1d6a01e515fb: Pull complete a71e1163fa7e: Pull complete 8c1a568fa442: Pull complete e7a69cecc173: Pull complete 9759a0f979a1: Pull complete 3f71dac6110f: Pull complete 58f37de54392: Pull complete Digest: sha256:790b7b18b832822ef400e44ad9fac885a746db1a7028ec52325730cf9b831753 Status: Downloaded newer image for mysql:latest b1f54c680120898fc7ff16751048fe18ae461399d5d7f10308c156c68d40577b check container is started cychong:~ cychong$ docker ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES b1f54c680120 mysql &amp;quot;docker-entrypoint.</description>
    </item>
    
    <item>
      <title>WP video plugin</title>
      <link>https://cychong47.github.io/post/2017/wp-video-plugin/</link>
      <pubDate>Fri, 06 Oct 2017 01:55:04 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/wp-video-plugin/</guid>
      <description>Install Easy Video Player
Others 7 Free WordPress Video Player Plugins of 2017</description>
    </item>
    
    <item>
      <title>Wordpress with docker-compose</title>
      <link>https://cychong47.github.io/post/2017/wordpress-with-docker-compose-failing/</link>
      <pubDate>Sun, 03 Sep 2017 15:00:57 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/wordpress-with-docker-compose-failing/</guid>
      <description>Under construction!!
Error https://docs.docker.com/compose/wordpress/#define-the-project 에 있는 에제대로 docker-compose.yaml 파일을 만든 후 도전~~
근데 실패
cychong:~/work/my_wordpress cychong$ docker-compose up -d Pulling db (mysql:5.7)... Traceback (most recent call last): File &amp;quot;docker-compose&amp;quot;, line 3, in &amp;lt;module&amp;gt; File &amp;quot;compose/cli/main.py&amp;quot;, line 68, in main File &amp;quot;compose/cli/main.py&amp;quot;, line 118, in perform_command File &amp;quot;compose/cli/main.py&amp;quot;, line 928, in up File &amp;quot;compose/project.py&amp;quot;, line 427, in up File &amp;quot;compose/service.py&amp;quot;, line 311, in ensure_image_exists File &amp;quot;compose/service.py&amp;quot;, line 1016, in pull File &amp;quot;site-packages/docker/api/image.</description>
    </item>
    
    <item>
      <title>Try to restore Wordpress container</title>
      <link>https://cychong47.github.io/post/2017/try-to-restore-wordpress-docker/</link>
      <pubDate>Sun, 03 Sep 2017 00:36:25 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/try-to-restore-wordpress-docker/</guid>
      <description>docker 버전이 업데이트되고, 몇 가지 변경사항이 있은 후 ghost, wordpress/mysql 조합의 container들이 접속이 되질 않는다. 한참을 두고 보다 ghost는 새 버전(1.x)이 나온 걸 계기로 새로 설치를 했는데(당연히 이전 설치에서 데이터를 container 내부가 아니라 local machine에 두도록 해서 데이터는 그대로 보존) wordpress는 그러질 못했다.
이것 역시 참다참다 못해 https://docs.docker.com/compose/wordpress/#define-the-project 에 나와있는 docker swarm을 이용해서 복구해 보려고 삽을 들었다.
위 페이지에 있는 대로 설정 파일을 만들고
version: &#39;3&#39; services: db: image: mysql:5.7 volumes: - /Users/cychong/Dropbox/Apps/wordpress/:/var/lib/mysql restart: always environment: MYSQL_ROOT_PASSWORD: xxx MYSQL_DATABASE: xxx MYSQL_USER: xxx MYSQL_PASSWORD: xxx wordpress: depends_on: - db image: wordpress:latest volumes: - /Users/cychong/Documents/wordpress/:/var/www/html - /Users/cychong/Documents/wordpress/php_uploads.</description>
    </item>
    
    <item>
      <title>Move to docker</title>
      <link>https://cychong47.github.io/post/2017/move-to-docker/</link>
      <pubDate>Tue, 04 Apr 2017 13:51:03 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/move-to-docker/</guid>
      <description>지금 집에 있는 두 대의 mac mini를 이용해서 각각 wordpress와 ghost를 돌리고 있다.
wordpress의 경우 2013년부터 시작한 블로그를 운영하는데 사용하고 있는데, 웹호스팅 회사 몇 군데를 전전하다 몇 년 전부터 집에 있는 mac mini 2009에 MAMP를 이용해서 자체 서버를 이용하고 있었다.
Ghost는 내가 좋아하는 markdown을 기본으로 사용하는 블로그 툴을 찾다 만났는데 지금은 사라졌지만 초기 홈페이지에 있던 멋진 dashboard에 낚여 설치했다. Open source 답지 않고 느린 개발 속도가 이해되지는 않지만, 여전히 markdwon을 제대로 지원하는 흔치 않은 설치형 블로그 툴이라 아직 희망을 버리지 않고 사용하고 있다.</description>
    </item>
    
  </channel>
</rss>