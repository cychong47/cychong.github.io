<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OVS on Another blog</title>
    <link>https://cychong47.github.io/tags/ovs/</link>
    <description>Recent content in OVS on Another blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 27 Nov 2014 14:47:38 +0900</lastBuildDate>
    
	<atom:link href="https://cychong47.github.io/tags/ovs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>R.I.P OVDK</title>
      <link>https://cychong47.github.io/post/2014/r-i-p-ovdk/</link>
      <pubDate>Thu, 27 Nov 2014 14:47:38 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2014/r-i-p-ovdk/</guid>
      <description>며칠 밖에 보지 않았지만, 그래도 내용을 분석해 보려고 했던 OVDK인데, 오늘 기사를 보니 Intel에서 공식적으로 OVDK의 개발 중단을 발표했단다.
Intel Dead-Ends Its Fork of Open vSwitch
Data path(Fast path)를 커널 모듈에서 처리하는 OVS를 fork해서 DPDK를 이용해서 user space에 Fast Path를 만들려고 했는데 그러다 보니 역시 계속해서 발전하는 OVS의 기능을 수용하기 부담스러웠나 보다. 더군다나 OVS에서도 experimental feature이긴 하지만 DPDK를 이용하는 코드도 있다고 하니.
내년 초에 나올 다음 버전 OVS에 공식 기능으로 들어가길 기대한다고.</description>
    </item>
    
    <item>
      <title>SDN expert group 세미나 - Play with DPDK</title>
      <link>https://cychong47.github.io/post/2014/sdn-expert-group-semina-play-with-dpdk/</link>
      <pubDate>Thu, 21 Aug 2014 12:11:18 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2014/sdn-expert-group-semina-play-with-dpdk/</guid>
      <description>세미나 내용  Controller &amp;ndash;(OpenFlow)&amp;ndash; ovs-switchd &amp;ndash;(netlink)&amp;ndash; Datapath Datapath is in the kernel space OVDK move the kernel based OVS to user space.  ovs-switched talk to OVDK with UDP   기존 OVDK는 port별 task handler(각각 별도의 core에서 동작)  그 결과 많은 core 필요 WR 이야기처럼 VM간 혹은 VM과 외부와의 통신을 담당하는 OVS용으로 많은 core를 사용하면 실제로 VM이 사용할 수 있는 core 개수가 줄어들어 문제   virtIO 사용시 VM에서 동작하는 application이 kernel stack의 필요한 경우 결국 OVDK와 VM내 커널 space간 copy가 필요함  최신 버전에서는 VM에서도 KNI based virtIO를 이용하도록 개선함.</description>
    </item>
    
  </channel>
</rss>