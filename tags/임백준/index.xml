<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>임백준 on Keep calm and write something</title><link>https://cychong47.github.io/tags/%EC%9E%84%EB%B0%B1%EC%A4%80/</link><description>Recent content in 임백준 on Keep calm and write something</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 07 Sep 2018 14:40:33 +0000</lastBuildDate><atom:link href="https://cychong47.github.io/tags/%EC%9E%84%EB%B0%B1%EC%A4%80/index.xml" rel="self" type="application/rss+xml"/><item><title>(책) 대살개문</title><link>https://cychong47.github.io/post/2018/developer-culture/</link><pubDate>Sun, 15 Jul 2018 13:41:48 +0900</pubDate><guid>https://cychong47.github.io/post/2018/developer-culture/</guid><description>임백준. 2016.5
96) dead code로 인한 사고 신규 기능을 위해 현재 지금은 disable로 설정된 변수를 재활용. 코드 변경을 깜빡하고 설정만 변경하여 잠자고 있던 예전 코드가 동작(예측 불가능한 동작) 사용하지 않는 코드는 소스 코드에서 삭제할 것. If 문으로 회피하는 것은 상당히 나쁘고 위험한 습관 소프트웨어의 전개 과정이 정확한 설명을 담고 있는 문서에 기반해야 함 효율성을 명목으로 코드의 간명함과 안정성을 해치는 행동은 피할 것 100) 오바마 케어 112) Detail 디테일이 살아 있고 빠르고 안정감 있게 동작하는 코드를 작성하는 것은 &amp;lsquo;능력&amp;rsquo;이 문제인 경우가 많지만 &amp;lsquo;태도&amp;rsquo;의 문제이기도 디테일과 사소함을 혼동하지 말 것 점 하나에 따라서 코드 전체의 의미가 달라질 수 있는 프로그래밍의 세계에서 디테일은 덤이 아니라 생명 121) 지식이 아니라 메타지식 전문성 보다는 부족한 정보를 토대로 최선의 판단을 내리는 적응력이 중요.</description></item></channel></rss>