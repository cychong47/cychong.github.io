<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>golang on Keep calm and write something</title>
    <link>https://cychong47.github.io/tags/golang/</link>
    <description>Recent content in golang on Keep calm and write something</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Sep 2017 14:39:11 +0900</lastBuildDate>
    
	<atom:link href="https://cychong47.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NGNIX for service mesh</title>
      <link>https://cychong47.github.io/post/2017/ngnix-for-service-mesh/</link>
      <pubDate>Fri, 15 Sep 2017 14:39:11 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/ngnix-for-service-mesh/</guid>
      <description>NGINX Releases Microservices Platform, OpenShift Ingress Controller, and Service Mesh Preview
NGNIX also join for service mesh bandwagon?
NGNIX Application Platform  NGINX Plus, the commercial variant of the popular open source NGINX web server. NGINX Web Application Firewall (WAF) NGINX Unit, a new open source application server that can run PHP, Python and Go NGINX Controller, a centralised control plane for monitoring and management of NGINX Plus  Additional release  a Kubernetes Ingress Controller solution for load balancing on the Red Hat OpenShift Container Platform an implementation of NGINX as a service proxy for the Istio service mesh control plane.</description>
    </item>
    
    <item>
      <title>(요약) How to ship production-grade Go</title>
      <link>https://cychong47.github.io/post/2017/how-to-ship-production-grade-go/</link>
      <pubDate>Thu, 04 May 2017 12:24:27 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/how-to-ship-production-grade-go/</guid>
      <description>출처 : O&amp;rsquo;reilly radar
현장에서 발생하는 문제 몇 번 겪어본 사람이면 대부분 동의할 문제긴 한데 structured log 사용이나 application metric 측정 등은 오래
Wrap errors Error handler wrapper function을 이용해서 error code(annotation 포함) 등을 잘 출력해서 분석이 쉽게 하자
Report panics Panic을 내야 하는 경우에는 해당 사실을 어딘가 기록(하거나 전송해서 남기고) 패닉 처리하자.
Use structured logs 일반 text보다는 덜 human-readable하지만 SW를 이용해서 분석하기 쉬운 structured log를 남기자. ELK를 이용해 로그 분석하기도 용이하다.</description>
    </item>
    
  </channel>
</rss>