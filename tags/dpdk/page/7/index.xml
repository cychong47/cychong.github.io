<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DPDK on Another blog</title>
    <link>https://cychong47.github.io/tags/dpdk/</link>
    <description>Recent content in DPDK on Another blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 20 May 2020 15:01:44 +0900</lastBuildDate>
    
        <atom:link href="https://cychong47.github.io/tags/dpdk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Slack이 기능 중 하나 - 방해금지</title>
      <link>https://cychong47.github.io/post/2017/slack-do-not-disturb/</link>
      <pubDate>Sun, 16 Apr 2017 05:51:11 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/slack-do-not-disturb/</guid>
      <description>Slack에서 제공하는 여러 가지 기능 중 하나로 &amp;ldquo;Do not disturb&amp;quot;가 있다. 아래는 그 기능을 설명한 블로그 글( Slack으로 막일을 줄여요 ~ 막</description>
    </item>
    
    <item>
      <title>윤식당에서 배우는 agile</title>
      <link>https://cychong47.github.io/post/2017/younkitchen-agile/</link>
      <pubDate>Sun, 16 Apr 2017 05:40:05 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/younkitchen-agile/</guid>
      <description>요즘 재밌게 보고 있는 JTBC 윤식당. 이서진을 포함한 몇 명의 연기자가 해외에 식당을 내고 운영한다. 그나마 얼굴이 덜 알려진 해외에서 요리를 남에게 파는 행위를 해봤을 것</description>
    </item>
    
    <item>
      <title>Slack &#43; Ghost</title>
      <link>https://cychong47.github.io/post/2017/slack-ghost/</link>
      <pubDate>Wed, 12 Apr 2017 15:37:39 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/slack-ghost/</guid>
      <description>Slack에 개인 채널(?)을 만들었다. 이런 저런 내가 수집(?)하는 정보들을 한 군데서 모아서 히스토리를 만들면 어떨까 하는 생각에 누구는 slack과 빌드</description>
    </item>
    
    <item>
      <title>Feature Flag Driven Development</title>
      <link>https://cychong47.github.io/post/2017/feature-flag-driven-development/</link>
      <pubDate>Wed, 12 Apr 2017 15:29:09 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/feature-flag-driven-development/</guid>
      <description>From Ericsson &amp;ldquo;Fueling 5G with DevOps&amp;rdquo; Maintaining one track in software development, using feature flag-driven development, and establishing version-controlled repositories for application code and application and system configuration data enables teams to create a complete environment that is ready for consistent “build and deploy”. What is feature flag-driven development? 특정 feature</description>
    </item>
    
    <item>
      <title>Espresso - Google&#39;s peering edge architecture</title>
      <link>https://cychong47.github.io/post/2017/espresso-googles-peering-edge-architecture/</link>
      <pubDate>Wed, 12 Apr 2017 00:32:57 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/espresso-googles-peering-edge-architecture/</guid>
      <description>Google Fellow Amin Vahdat,
 “Early on, we realized that the network we needed to support our services did not exist and could not be bought,”
 Espresso makes Google cloud faster, more available and cost effective by extending SDN to the public internet
 network should be treated as a large-scale distributed system leveraging the same control infrastructure we developed for Google’s compute and storage systems  Four pillars on Google&amp;rsquo;s SDN strategy  Jupiter: Google employed SDN principles to build Jupiter, a data center interconnect capable of supporting more than 100,000 servers.</description>
    </item>
    
    <item>
      <title>Why message queue used for microservice?</title>
      <link>https://cychong47.github.io/post/2017/why-message-queue-used-for-microservice/</link>
      <pubDate>Sun, 09 Apr 2017 15:41:23 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/why-message-queue-used-for-microservice/</guid>
      <description></description>
    </item>
    
    <item>
      <title>P4</title>
      <link>https://cychong47.github.io/post/2017/p4/</link>
      <pubDate>Sun, 09 Apr 2017 08:58:50 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/p4/</guid>
      <description>Open source language for &amp;ldquo;Programming Protocol-independent Packet Processor&amp;rdquo;
http://p4.org
 Barefoot network - Tofino - PISA(Protocol Independent Switch Architecture) switch Netronome - smart NIC   5G: flexibility or high performance? Both - Ericsson Research Blog   POF/PIF and P4 initiatives all point in a direction where programmable packet processing will not depend on standardized OpenFlow action sets anymore
POF : Protocol Oblivious Forwarding PIF : Protocol Independent Forwarding</description>
    </item>
    
    <item>
      <title>Table or dish</title>
      <link>https://cychong47.github.io/post/2017/table-or-dish/</link>
      <pubDate>Thu, 06 Apr 2017 00:40:05 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/table-or-dish/</guid>
      <description>They are going to have to make a choice here - do you want to be at the table or on the plate? 먹을래 먹힐래?</description>
    </item>
    
    <item>
      <title>Move to docker</title>
      <link>https://cychong47.github.io/post/2017/move-to-docker/</link>
      <pubDate>Tue, 04 Apr 2017 13:51:03 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2017/move-to-docker/</guid>
      <description>지금 집에 있는 두 대의 mac mini를 이용해서 각각 wordpress와 ghost를 돌리고 있다. wordpress의 경우 2013년부터 시작한 블로그를 운</description>
    </item>
    
    <item>
      <title>(책) 어떻게 읽을 것인가 - 2</title>
      <link>https://cychong47.github.io/post/2016/how-to-read-2/</link>
      <pubDate>Fri, 10 Jun 2016 14:43:55 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2016/how-to-read-2/</guid>
      <description>만독 책을 느리게(집중해서) 읽기 아이에게 책 읽어주기 부모가 읽어야 아이도 읽는다 1단계. 책 선정 초등학생이면 어휘가 풍부한 국내 소설 오래 살아남은 책. 고전 문</description>
    </item>
    
    <item>
      <title>(책) 어떻게 읽을 것인가</title>
      <link>https://cychong47.github.io/post/2016/how-to-read/</link>
      <pubDate>Fri, 10 Jun 2016 14:00:20 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2016/how-to-read/</guid>
      <description>고정형 - 지능은 변하지 않는다 성장형 - 지능은 좋아질 수 있다 생각을 바꾼다는 것이 쉬운 일은 아니지만 인식의 변화가 주는 효과는 크다 중학교에서는 고정형 아이들의 성</description>
    </item>
    
    <item>
      <title>fossilization</title>
      <link>https://cychong47.github.io/post/2016/fossilization/</link>
      <pubDate>Thu, 12 May 2016 03:41:20 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2016/fossilization/</guid>
      <description>fossilize also -lise (usually passive) if people, ideas, systems etc fossilize or are fossilized, they never change or develop, even when there are good reasons why they should change Most couples, however fossilized their relationship, have some interests in common. 간혹 팟캐스트에 공룡에 대한 이야기가 나온다. 공룡에 대한 연구가 상대</description>
    </item>
    
    <item>
      <title>상식과 다른 결과를 보면</title>
      <link>https://cychong47.github.io/post/2016/too-early-confident/</link>
      <pubDate>Wed, 11 May 2016 10:01:53 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2016/too-early-confident/</guid>
      <description>먼저 주변을 의심해 보자. 상식적인 혹은 알려진 것과 다른 결과가 나왔다면 내가 한 시험 방법을 다시 한번 의심해 보자. 제발</description>
    </item>
    
    <item>
      <title>빨리 해봐야 소용없다</title>
      <link>https://cychong47.github.io/post/2016/no-need-to-rush/</link>
      <pubDate>Wed, 11 May 2016 09:59:23 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2016/no-need-to-rush/</guid>
      <description>개발자의 품을 가벼이 여기는 조직에서 일 할때는 일정보다 일을 빨리하면 안된다. 기껏 한 일이 아무 소용없을 때가 많다.</description>
    </item>
    
    <item>
      <title>Ghost 본문 다 보이기</title>
      <link>https://cychong47.github.io/post/2016/display-post-by-default-ghost/</link>
      <pubDate>Mon, 09 May 2016 15:23:57 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2016/display-post-by-default-ghost/</guid>
      <description>theme을 수정해서 ghost blog 화면에서 글 본문이 다 나오도록 할 수 있다. 대신 theme마다 조금씩 적용 방법이 다른데 기본적으로 변경해야 할 내용은 동일 casper theme cas</description>
    </item>
    
    <item>
      <title>Frag &amp; Reassembly Test</title>
      <link>https://cychong47.github.io/post/2016/frag-reassembly-test/</link>
      <pubDate>Sun, 01 May 2016 15:35:28 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2016/frag-reassembly-test/</guid>
      <description>set environment export RTE_ARCH=x86_64 export RTE_SDK=/home/cychong/Work/dpdk-2.1.0 export RTE_TARGET=x86_64-native-linuxapp-gcc export RTE_OUTPUT=$RTE_SDK/$RTE_TARGET  run sudo ./build/ip_reassembly -c 0x1 -n 4 -m 1000M --no-huge --no-pci --no-hpet -- --display_pps 1 --tx_pps 10  </description>
    </item>
    
    <item>
      <title>(책) 소프트 스킬</title>
      <link>https://cychong47.github.io/post/2016/soft-skill/</link>
      <pubDate>Tue, 19 Apr 2016 10:25:08 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2016/soft-skill/</guid>
      <description>2 다른 이들과 달리 멋지게 시작하라 자신의 경력을 사업으로 봐야 한다. 자신의 정체성이나 경력은 조직에서 주어진 역할과 별개로 존재한다고 생각 팔수 있는 제품이나 서</description>
    </item>
    
    <item>
      <title>DPDK IPv4 reassembly</title>
      <link>https://cychong47.github.io/post/2016/dpdk-ipv4-reassembly/</link>
      <pubDate>Thu, 24 Mar 2016 15:03:55 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2016/dpdk-ipv4-reassembly/</guid>
      <description>rte_ipv4_frag_reassemble_packet() ip_frag_find() 기존에 존재하는 flow면 해당 flow를 저장한 entry 정보를(ip_frag_pkt *pkg) 신규 flow인 경우 해당 신규 flow를 저장할 신규 혹은 재사용된</description>
    </item>
    
    <item>
      <title>(책) Becoming a better Programmer</title>
      <link>https://cychong47.github.io/post/2016/becoming-a-better-programmer/</link>
      <pubDate>Mon, 14 Mar 2016 14:50:15 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2016/becoming-a-better-programmer/</guid>
      <description>코드에 신경쓰기 어떤 코드든 간에 수정한 후에는 이전 보다 나아져야 한다 기능이 추가된 것은 &amp;lsquo;나아진&amp;rsquo; 것이 아니다. 기능이 추가되고, 코</description>
    </item>
    
    <item>
      <title>DPDK new mbuf 사용 주의사항</title>
      <link>https://cychong47.github.io/post/2016/header-length-in-mbuf/</link>
      <pubDate>Sun, 06 Mar 2016 08:22:24 +0900</pubDate>
      
      <guid>https://cychong47.github.io/post/2016/header-length-in-mbuf/</guid>
      <description>l2_len, l3_len, l4_len 등을 사용하는 라이브러리가 존재함 reassembly Tx checksum offload Reassembly rte_ipv6_frag_reassemble_packet(), rte_ipv4_frag_reassemble_packet() Incoming mbuf should have its l2_len and l3_len fields setup correctly. L4 checksum HW offloading To use hardware L4 checksum offload, the user needs to fill l2_len and l3_len in mbuf set the flags PKT_TX_TCP_CKSUM, PKT_TX_SCTP_CKSUM or PKT_TX_UDP_CKSUM set the flag PKT_TX_IPV4 or PKT_TX_IPV6 calculate</description>
    </item>
    
  </channel>
</rss>
