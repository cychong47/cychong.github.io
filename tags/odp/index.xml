<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Odp on Keep calm and write something</title><link>https://cychong47.github.io/tags/odp/</link><description>Recent content in Odp on Keep calm and write something</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 01 Apr 2018 02:38:40 +0000</lastBuildDate><atom:link href="https://cychong47.github.io/tags/odp/index.xml" rel="self" type="application/rss+xml"/><item><title>OpenFastPath</title><link>https://cychong47.github.io/post/2015/openfastpath/</link><pubDate>Fri, 11 Dec 2015 14:40:23 +0900</pubDate><guid>https://cychong47.github.io/post/2015/openfastpath/</guid><description>Another Open source project.
User-land protocol stack. Incorporate with ODP
To use with DPDK, ODP and ODP-DPDK should be used.
From the FAQ
Q: Does the OFP IP stack mimic Linux stack config inside the fastpath, meaning does it intercept Linux ipconfig/ip commands and automatically create similar entities inside the fastpath stack? A: Yes. Uses Netlink to sync with ifconfig commands and also with routes. Q: Does the OFP IP stack have full IPv4/IPv6 fragmentation/re-assembly support?</description></item><item><title>ODP</title><link>https://cychong47.github.io/post/2014/odp/</link><pubDate>Wed, 19 Nov 2014 14:02:19 +0900</pubDate><guid>https://cychong47.github.io/post/2014/odp/</guid><description>Cavium Demonstrates Multiple OpenDataPlane Applications at Linaro Connect USA 2014 Cavium ThunderX 48 Core 2.5Ghz ARM Server SoC Cavium ThunderX 48 Core 2.5Ghz ARM Server SoC Cavium ThunderX is the world&amp;rsquo;s fastest ARM Processor, featuring 48 ARMv8 64bit cores at 2.5Ghz each, with two SoC&amp;rsquo;s possible per motherboard, this means 240Ghz of compuete power per Server Board. Providing extremely high performance at much lower power, much lower cost, much more optimized than any x86 server system.</description></item><item><title>OpenDataPlane</title><link>https://cychong47.github.io/post/2014/opendataplane/</link><pubDate>Sat, 24 May 2014 14:15:25 +0900</pubDate><guid>https://cychong47.github.io/post/2014/opendataplane/</guid><description>Network 장비를 만드는 방법 중 가장 흔한 방법이 Networking에 최적화된 processor를 제공하는 업체로부터 processor를 구입하고, 그 processor와 함께 제공되는 SDK를 사용하는 것이다. 그러다보니 특정 업체의 processor를 위해 만든 S/W를 다른 processor로 포팅하는 경우 많은 부분을 수정해야 하는 경우가 많다.
당연한 이야기지만, 특정 processor에 종속적인 부분은 해당 processor가 제공하는 H/W accelerator 를 이용하는 코드나 해당 processor의 특성에 맞게 설계된 구조 등이다. 다른 processor로 포팅하는 경우 전자의 경우는 새로운 processor에서 대응되는 API등이 제공되면 비교적 쉽게 변경할 수 있다.</description></item></channel></rss>