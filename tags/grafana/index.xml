<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Grafana on Keep calm and write something</title><link>https://cychong47.github.io/tags/grafana/</link><description>Recent content in Grafana on Keep calm and write something</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 20 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://cychong47.github.io/tags/grafana/index.xml" rel="self" type="application/rss+xml"/><item><title>Monitoring Cilium and Hubble with Prometheus and Grafana</title><link>https://cychong47.github.io/post/2024/2024-02-20-cilium-and-hubble-with-prometheus-and-grafana/</link><pubDate>Tue, 20 Feb 2024 00:00:00 +0000</pubDate><guid>https://cychong47.github.io/post/2024/2024-02-20-cilium-and-hubble-with-prometheus-and-grafana/</guid><description>Setup Prometheus and Grafana to scrap Cilium metrics This will create a new namespace cilium-monitoring
kubectl apply -f https://raw.githubusercontent.com/cilium/cilium/1.15.1/examples/kubernetes/addons/prometheus/monitoring-example.yaml Some warnings&amp;hellip; namespace/cilium-monitoring created serviceaccount/prometheus-k8s created configmap/grafana-config created configmap/grafana-cilium-dashboard created configmap/grafana-cilium-operator-dashboard created configmap/grafana-hubble-dashboard created configmap/grafana-hubble-l7-http-metrics-by-workload created configmap/prometheus created clusterrole.rbac.authorization.k8s.io/prometheus created clusterrolebinding.rbac.authorization.k8s.io/prometheus created service/grafana created service/prometheus created Warning: would violate PodSecurity &amp;#34;restricted:latest&amp;#34;: allowPrivilegeEscalation != false (container &amp;#34;grafana-core&amp;#34; must set securityContext.allowPrivilegeEscalation=false), unrestricted capabilities (container &amp;#34;grafana-core&amp;#34; must set securityContext.capabilities.drop=[&amp;#34;ALL&amp;#34;]), runAsNonRoot != true (pod or container &amp;#34;grafana-core&amp;#34; must set securityContext.</description></item><item><title>Grafana, influxDB and python</title><link>https://cychong47.github.io/post/2018/grafana-influxdb-and-python/</link><pubDate>Wed, 06 Jun 2018 04:33:06 +0900</pubDate><guid>https://cychong47.github.io/post/2018/grafana-influxdb-and-python/</guid><description>Time-series data를 python을 이용해서 influxDB에 저장하고, Grafana로 그래프를 보여주는 예제
https://github.com/cychong47/influxdb_example.git
Install Grafana and influxDB Install Grafana 직접 호스트에 설치할 수도 있지만, 세상 편하게 만들어준 docker를 이용해서 grafana, influxdb등을 설치하자.
mbpr15:~ cychong$ docker pull grafana/grafana Using default tag: latest latest: Pulling from grafana/grafana f2aa67a397c4: Pull complete 89573effc7c8: Pull complete b55c103da375: Pull complete Digest: sha256:364bec4a39ecbec744ea4270aae35f6554eb6f2047b3ee08f7b5f1134857c32c Status: Downloaded newer image for grafana/grafana:latest Start grafana
mbpr15:~ cychong$ docker run -d -p 3000:3000 —name grafana grafana/grafana 148894d7009259b02b04e1a98467f549400be91f9b055f8686557d69b9339e4b Install influxDB influxdb도 docker 명령어 하나로 설치</description></item></channel></rss>